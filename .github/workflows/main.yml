# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
  pull_request:
    branches: [ main ]
env:
  PYTEST_RUN_PATH: $GITHUB_WORKSPACE\..\tests
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.2"]
        poetry-version: [1.8.2]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
          
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
            
      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: Activate env and Test with pytest
        env:
          PYTEST_PLUGINS: pytest_github_actions_annotate_failures
        run: poetry run pytest
